{"version":3,"sources":["Page/Header.js","ListData/ListMakanan.js","Page/MenuMakanan.js","Page/MenuKontak.js","Events/TopEvents.js","Page/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","align","ListMakanan","props","state","datalist","gambar","src","this","alt","width","height","Component","MenuMakanan","pesan","rubahPesanan","bind","e","preventDefault","tampungData","setState","console","log","target","value","onClick","type","onChange","pesanan","MenuKontak","alamat","kontak","TopEvents","href","alert","handleFooter","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gPAUeA,MARf,WACC,OACG,yBAAKC,MAAM,UACR,uE,OCcQC,E,kDAhBd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACVC,SAAS,EAAKF,MAAMG,QAHJ,E,qDAQjB,OACC,6BACY,yBAAKC,IAAKC,KAAKJ,MAAMC,SAAUI,IAAI,kBAAkBC,MAAM,MAAOC,OAAO,a,GAX9DC,aCqEXC,E,kDAnEd,WAAYV,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACVU,MAAQ,GAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKF,MAAQ,EAAKA,MAAME,KAAX,gBAPI,E,yDAULC,GACZA,EAAEC,iBACF,IAAIC,EAAcX,KAAKJ,MAAMU,MAAQ,EACrCN,KAAKY,UAAS,SAAChB,EAAOD,GAAR,MAAmB,CAC/BW,MAAOK,Q,4BAIJF,GACLA,EAAEC,iBACFG,QAAQC,IAAIL,EAAEM,OAAOC,S,+BAGb,IAAD,OACP,OACA,yBAAKvB,MAAM,UACX,oEACA,+BACC,+BACG,4BACG,wBAAIA,MAAM,UACR,kBAAC,EAAD,CAAaK,OAAO,6EACpB,4BAAQmB,QAAS,SAACR,GAAD,OAAO,EAAKF,aAAaE,KAA1C,mBAGF,wBAAIhB,MAAM,UACR,kBAAC,EAAD,CAAaK,OAAO,uEACpB,4BAAQmB,QAAS,SAACR,GAAD,OAAO,EAAKF,aAAaE,KAA1C,mBAGF,wBAAIhB,MAAM,UACR,kBAAC,EAAD,CAAaK,OAAO,+EACpB,4BAAQmB,QAAS,SAACR,GAAD,OAAO,EAAKF,aAAaE,KAA1C,mBAGL,wBAAIhB,MAAM,UACL,kBAAC,EAAD,CAAaK,OAAO,4GACpB,4BAAQmB,QAAS,SAACR,GAAD,OAAO,EAAKF,aAAaE,KAA1C,mBAGH,wBAAIhB,MAAM,UACP,kBAAC,EAAD,CAAaK,OAAO,6FACpB,4BAAQmB,QAAS,SAACR,GAAD,OAAO,EAAKF,aAAaE,KAA1C,sBAKT,6BACA,2BAAOS,KAAK,OAAOC,SAAU,SAACV,GAAD,OAAO,EAAKW,QAAQX,MACjD,8CAAoBT,KAAKJ,MAAMU,Y,GA5DPF,aCoBXiB,E,kDApBd,WAAa1B,GAAO,IAAD,8BAClB,cAAMA,IACAC,MAAQ,CACH0B,OAAS,iGACTC,OAAS,gBAJF,E,qDASlB,OACC,6BACG,gCACE,4BAAKvB,KAAKJ,MAAM0B,OAAhB,KACA,6CAAmBtB,KAAKJ,MAAM2B,OAA9B,W,GAdiBnB,aCWVoB,EAXE,WAMjB,OACC,uBAAGC,KAAK,IAAIR,QAAW,SAAAR,GAAC,OANH,SAACO,EAAOP,GACzBA,EAAEC,iBACLgB,MAAMV,GAImBW,CAAa,eAAgBlB,KAAvD,iBCKcmB,E,uKATb,OACC,yBAAKnC,MAAM,UACX,kBAAC,EAAD,MACA,sD,GALkBW,aCmBNyB,E,uKAbX,OACD,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPezB,aCKE0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,a","file":"static/js/main.c2d778fb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(){\r\n\treturn(\r\n\t   <div align=\"center\">\t \r\n       <h2>Home| Product | Kontak | Tentang Kami</h2>\r\n       </div>\r\n       \t)\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListMakanan extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tdatalist:this.props.gambar\r\n\t\t};\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n               <img src={this.state.datalist} alt=\"Product Makanan\" width=\"150\"  height=\"135\" />\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default ListMakanan;","import React, { Component } from \"react\";\r\nimport ListMakanan from './../ListData/ListMakanan';\r\n\r\nclass MenuMakanan extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tpesan : 0\r\n\t\t};\r\n\r\n\t\tthis.rubahPesanan = this.rubahPesanan.bind(this);\r\n\t\tthis.pesan = this.pesan.bind(this);\r\n\t}\r\n\r\n\trubahPesanan(e){\r\n\t\te.preventDefault();\r\n\t\tvar tampungData = this.state.pesan + 1;\r\n\t\tthis.setState((state, props) => ({\r\n\t\t\t\tpesan: tampungData\r\n\t\t\t}));\r\n\t}\r\n\r\n\tpesan(e){\r\n\t\te.preventDefault()\r\n\t\tconsole.log(e.target.value)\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t<div align=\"center\">\r\n\t\t<h3>Daftar Makanan yang Kami Sediakan : </h3>\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t   <tr>\r\n\t\t\t      <td align=\"center\">\r\n\t\t\t        <ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\" />\r\n\t\t\t        <button onClick={(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\r\n\t\t\t      </td>\r\n\t\t\t   \r\n\t\t\t      <td align=\"center\">\r\n\t\t\t        <ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\" />\r\n\t\t\t        <button onClick={(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\r\n\t\t\t      </td>\r\n\r\n\t\t\t      <td align=\"center\">\r\n\t\t\t        <ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\" />\r\n\t\t\t        <button onClick={(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\r\n\t\t\t      </td>\r\n\r\n\t\t\t\t  <td align=\"center\">\r\n\t\t\t        <ListMakanan gambar=\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\" />\r\n\t\t\t        <button onClick={(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\r\n\t\t\t      </td>\r\n\r\n  \t\t\t\t  <td align=\"center\">\r\n\t\t\t        <ListMakanan gambar=\"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg\" />\r\n\t\t\t        <button onClick={(e) => this.rubahPesanan(e)}>Pesan Sekarang</button>\r\n\t\t\t      </td>\r\n\t\t\t   </tr>\r\n\t\t\t</tbody>\r\n\t\t</table> \r\n\t\t<br />\r\n\t\t<input type=\"text\" onChange={(e) => this.pesanan(e)} />\r\n\t\t<h3>Pesanan Anda : {this.state.pesan}</h3>\r\n\r\n\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MenuMakanan;","import React, {Component} from \"react\";\r\n\r\nclass MenuKontak extends Component{\r\n\tconstructor (props){\r\n\t\tsuper(props);\r\n\t\t\tthis.state = {\r\n           \t\talamat : 'Jl. Swadaya IV, Pd. Ranggon, Cipayung, Kota Jakarta Timur, Daerah Khusus Ibukota Jakarta 13860',\r\n           \t\tkontak : '081312345678',\r\n           }\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div> \r\n\t\t\t   <center>\r\n\t\t\t     <h3>{this.state.alamat} </h3>\r\n\t\t\t     <h4>Kontak Kami : {this.state.kontak} </h4>  \r\n\t\t\t   </center>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default MenuKontak;","import React from \"react\";\r\n\r\nconst TopEvents =()=> {\r\n\tconst handleFooter = (value, e) =>{\r\n\t    e.preventDefault();\r\n\t\talert(value);\r\n\t};\r\n\r\nreturn(\r\n\t<a href=\"/\" onClick = {e=>handleFooter(\"Back to Home\", e)}>Back To Home</a>\r\n\t);\r\n};\r\n\r\nexport default TopEvents;","import React, { Component } from \"react\";\r\nimport TopEvents from './../Events/TopEvents';\r\n\r\nclass Footer extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div align=\"center\">\r\n\t\t\t<TopEvents />\r\n\t\t\t<h3>Tugas 3 react Js </h3>   \r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;","import React, { Component }  from 'react';\nimport './App.css';\nimport Header from './Page/Header';\nimport MenuMakanan from './Page/MenuMakanan';\nimport MenuKontak from './Page/MenuKontak';\nimport Footer from './Page/Footer';\n\nclass App extends Component {\n   render() {\n    return(\n   <div>\n   <Header/>\n   <MenuMakanan/>\n   <MenuKontak/>\n   <Footer/> \n   </div>\n\n      )\n   }\n} \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}